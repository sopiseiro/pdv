/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package pdvjonatas;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.File;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JDialog;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;
import utilitarios.bd;
import utilitarios.mySql;


/**
 *
 * @author Jonatas
 */
public class FrameRelatorios extends javax.swing.JDialog {

    private DecimalFormat df;
    /**
     * Creates new form frameRelatórios
     */
    public FrameRelatorios(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setListDiretorio();
        setEspecie();
        setTitle("Relatórios");
        df = new DecimalFormat("###,##0.00");
    }
    
    public void setListDiretorio(){
        try {
            File file = new File("relatorios");
            File afile[] = file.listFiles();
            int i = 0;
            for (int j = afile.length; i < j; i++) {
                File arquivos = afile[i];
                //String aux[] = arquivos.getName().split(".");
                comboRelatorios.addItem(arquivos.getName());
                //System.out.println(arquivos.getName()); 
            }
        } catch (Exception e) {
          
        } 
        
    }
    
    public void setEspecie(){
        bd b = new bd();
        b.connect();
        mySql f = new mySql(b.conn);
        f.open("SELECT * FROM ESPECIE ORDER BY numero");
        filtro.addItem("Sem filtro");
        while(f.next()){
            filtro.addItem(f.fieldbyname("ESPECIE"));
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        comboRelatorios = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        modelo = new javax.swing.JTextField();
        serie = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        filtro = new javax.swing.JComboBox();
        data_inicio = new javax.swing.JFormattedTextField();
        data_fim = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Relatórios:");

        jLabel2.setText("Modelo:");

        jLabel3.setText("Série:");

        jLabel4.setText("Período:");

        modelo.setText("1");

        serie.setText("A");

        jLabel5.setText("até");

        jButton1.setText("Imprimir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Voltar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel6.setText("Filtro de Espécie:");

        filtro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filtroActionPerformed(evt);
            }
        });

        data_inicio.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));

        data_fim.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(6, 6, 6)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(data_inicio)
                            .addComponent(modelo, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(21, 21, 21)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(data_fim)
                            .addComponent(serie, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(comboRelatorios, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(filtro, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(comboRelatorios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(filtro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(modelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(serie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(data_inicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(data_fim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void filtroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filtroActionPerformed
        
    
    }//GEN-LAST:event_filtroActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (data_inicio.getText().equals("")){
            data_inicio.requestFocus();
            return;
        }
        if (data_fim.getText().equals("")){
            data_fim.requestFocus();
            return;
        }
        if (modelo.getText().equals("")){
            modelo.requestFocus();
            return;
        }
        if (serie.getText().equals("")){
            serie.requestFocus();
            return;
        }
        bd b = new bd();
        b.connect();
        
      /*  if (etapas.getSelectedItem().toString().equals("-- Selecione --")){
            etapas.requestFocus();
            return;
        }*/
        String resultadoEspecie = "";
        String filtroAux = filtro.getSelectedItem().toString();
        try {
            resultadoEspecie = ""+setTotalizador(filtroAux);
            System.out.println("Ponto 1");
        } catch (ParseException ex) {
            Logger.getLogger(FrameRelatorios.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (filtro.getSelectedItem().equals("Sem filtro")){
            filtroAux = "";
            try {
                resultadoEspecie = setTotalizador();
            } catch (ParseException ex) {
                Logger.getLogger(FrameRelatorios.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        
        try {
            
            
            float totalizador[] = null;
            Toolkit toolkit = Toolkit.getDefaultToolkit();    
            Dimension screenSize = toolkit.getScreenSize();    

            JDialog viewer = new JDialog(new javax.swing.JFrame(),"Impressão de Relatório", true);   
            viewer.setSize(screenSize.width, screenSize.height);  
            viewer.setLocationRelativeTo(null);
            
            mySql banco = new mySql(b.conn);
            banco.open("SELECT RAZAO_SOCIAL FROM EMITENTE");
            String emitente = "";
            while(banco.next()){
                emitente = banco.fieldbyname("razao_social");
            }
            
            
            
            DateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
            Date ini = (Date)formatter.parse(data_inicio.getText());
            Date fim = (Date)formatter.parse(data_fim.getText());

            //System.out.println(dataini[2]+"-"+dataini[1]+"-"+dataini[0]);

            //mapa de dados
            HashMap<String, Object> p = new HashMap<String, Object>();
            p.put("MODELO", modelo.getText());
            p.put("SERIE", serie.getText());
            p.put("DATA_INICIO", ini);
            p.put("DATA_FIM", fim);
            p.put("FILTRO", "%"+filtroAux+"%" );
            p.put("USUARIO", Main.vendedor);
            p.put("EMPRESA", emitente);
            p.put("ESPECIE", resultadoEspecie);
            


            //exibe relatorio
            JasperPrint jp = JasperFillManager.fillReport("relatorios//"+comboRelatorios.getSelectedItem(), p, b.conn);
            JasperViewer jrv = new JasperViewer(jp, false);
            viewer.getContentPane().add(jrv.getContentPane());   
            viewer.setVisible(true); 
            b.disconnect();


        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    public String setTotalizador(String especie) throws ParseException{
        bd b = new bd();
        b.connect();
        mySql banco = new mySql(b.conn);
        
        String ini[] = data_inicio.getText().split("/");
        String fim[] = data_fim.getText().split("/");
        float total = 0;
        
        banco.open("SELECT observacoes FROM VENDAS WHERE DATA_EMISSAO BETWEEN '"+ini[2]+"-"+ini[1]+"-"+ini[0]+"' and '"+fim[2]+"-"+fim[1]+"-"+fim[0]+"'AND OBSERVACOES LIKE '%"+especie+"%'");
        while (banco.next()){
            String aux = banco.fieldbyname("observacoes");
            String corte[] = aux.split(" Taxas Adicionais");
            String corte2[] = corte[0].split("\n");
            for (int i=1;i<corte2.length;i++){
                String corte3[] = corte2[i].split("\t");
                if (corte3[0].replaceAll(" ", "").equals(especie)){
                    total += Float.parseFloat(corte3[1].replaceAll("[* R$ ]", "").replace(".", "").replace(",", "."));
                }
            }
            //System.out.println(total);
            //System.out.println(corte[0].replaceAll("[^0-9][ \\t\\n\\x0b\\r\\f]", ""));

        }
        return "Total por Espécie\n"+especie+": R$ "+df.format(total);
    }
    
    public String setTotalizador() throws ParseException{
        bd b = new bd();
        b.connect();
        
        bd f = new bd();
        f.connect();
        mySql banco = new mySql(f.conn);
        mySql banco2 = new mySql(b.conn);
        
        String retorno = "Total por Espécie\n";
        
        banco2.open("SELECT * FROM ESPECIE");
        while (banco2.next()){
            String especie = banco2.fieldbyname("especie");
            System.out.println("Ponto 2"+especie);
            
            String ini[] = data_inicio.getText().split("/");
            String fim[] = data_fim.getText().split("/");
            float total = 0;

            banco.open("SELECT observacoes FROM VENDAS WHERE DATA_EMISSAO BETWEEN '"+ini[2]+"-"+ini[1]+"-"+ini[0]+"' and '"+fim[2]+"-"+fim[1]+"-"+fim[0]+"' AND OBSERVACOES LIKE '%"+especie+"%'");
            while (banco.next()){
                String aux = banco.fieldbyname("observacoes");
                String corte[] = aux.split(" Taxas Adicionais");
                String corte2[] = corte[0].split("\n");
                for (int i=1;i<corte2.length;i++){
                    String corte3[] = corte2[i].split("\t");
                    if (corte3[0].replaceAll(" ", "").equals(especie))
                        total += Float.parseFloat(corte3[1].replaceAll("[* R$ ]", "").replace(".", "").replace(",", "."));
                }
                //System.out.println(total);
                //System.out.println(corte[0].replaceAll("[^0-9][ \\t\\n\\x0b\\r\\f]", ""));

            }// fim do while 02
            
            retorno += especie+":\t R$ "+df.format(total)+"\n";
            System.out.println("Ponto 2 "+ retorno);
            
        }//fim while 01
        return retorno;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameRelatorios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameRelatorios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameRelatorios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameRelatorios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FrameRelatorios dialog = new FrameRelatorios(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox comboRelatorios;
    private javax.swing.JFormattedTextField data_fim;
    private javax.swing.JFormattedTextField data_inicio;
    private javax.swing.JComboBox filtro;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField modelo;
    private javax.swing.JTextField serie;
    // End of variables declaration//GEN-END:variables
}
